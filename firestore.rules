rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users: Allow users to manage their own data, Developers to read/write all, Admins to read and update specific fields
    match /Users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/Developers/$(request.auth.uid));
      allow read: if request.auth != null && (
        exists(/databases/$(database)/documents/Admins/$(request.auth.uid))
      );
      allow update: if request.auth != null && (
        exists(/databases/$(database)/documents/Admins/$(request.auth.uid))
      ) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['role', 'username', 'email', 'organization', 'createdAt']);
    }

    match /Facilities/{facilityId} {
      allow read, write: if request.auth != null;
    }

    match /Developers/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/Developers/$(request.auth.uid));
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/Developers/$(request.auth.uid));
      allow delete: if request.auth != null && 
        exists(/databases/$(database)/documents/Developers/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/Developers/$(userId)).data.email != 'lubangafabron@gmail.com';
    }

    match /Admins/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && (
        exists(/databases/$(database)/documents/Developers/$(request.auth.uid)) ||
        exists(/databases/$(database)/documents/Admins/$(request.auth.uid))
      );
      allow write: if request.auth != null && (
        exists(/databases/$(database)/documents/Developers/$(request.auth.uid)) ||
        exists(/databases/$(database)/documents/Admins/$(request.auth.uid))
      );
    }

    match /Technicians/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        exists(/databases/$(database)/documents/Admins/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/Admins/$(request.auth.uid)).data.organization in ['Embassy', 'JV Almacis']
        ||
        exists(/databases/$(database)/documents/Developers/$(request.auth.uid))
      );
    }

    match /admin_logs/{logId} {
      allow read, write, delete: if request.auth != null && (
        exists(/databases/$(database)/documents/Developers/$(request.auth.uid)) ||
        exists(/databases/$(database)/documents/Admins/$(request.auth.uid))
      );
    }

    match /Reports/{reportId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /BillingData/{billingId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if request.auth != null && (
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['approvalStatus', 'approvalNotes', 'approvedBy', 'approvedAt']) ||
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status', 'updatedAt'])
      );
    }

    match /BuildingSurveys/{surveyId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /Documentations/{documentationId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /Drawings/{drawingId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /PriceList/{priceListId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /Schedule_Maintenance/{scheduleId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        request.resource.data.userId == request.auth.uid ||
        request.resource.data.createdBy == request.auth.uid
      );
      allow update: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        resource.data.createdBy == request.auth.uid ||
        exists(/databases/$(database)/documents/Developers/$(request.auth.uid)) ||
        exists(/databases/$(database)/documents/Admins/$(request.auth.uid))
      );
      allow delete: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        resource.data.createdBy == request.auth.uid ||
        exists(/databases/$(database)/documents/Developers/$(request.auth.uid)) ||
        exists(/databases/$(database)/documents/Admins/$(request.auth.uid))
      );
    }

    // NEW: Work Requests collection rules
    match /Work_Requests/{requestId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.resource.data.createdBy == request.auth.uid;
      allow update: if request.auth != null && (
        resource.data.createdBy == request.auth.uid ||
        exists(/databases/$(database)/documents/Developers/$(request.auth.uid)) ||
        exists(/databases/$(database)/documents/Admins/$(request.auth.uid)) ||
        exists(/databases/$(database)/documents/Technicians/$(request.auth.uid))
      );
      allow delete: if request.auth != null && (
        resource.data.createdBy == request.auth.uid ||
        exists(/databases/$(database)/documents/Developers/$(request.auth.uid)) ||
        exists(/databases/$(database)/documents/Admins/$(request.auth.uid))
      );
    }

    // Work Orders: Same structure as Work_Requests
    match /Work_Orders/{workOrderId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.resource.data.createdBy == request.auth.uid;
      allow update: if request.auth != null && (resource.data.createdBy == request.auth.uid || 
                    exists(/databases/$(database)/documents/Developers/$(request.auth.uid)) || 
                    exists(/databases/$(database)/documents/Admins/$(request.auth.uid)) || 
                    exists(/databases/$(database)/documents/Technicians/$(request.auth.uid)));
      allow delete: if request.auth != null && (resource.data.createdBy == request.auth.uid || 
                    exists(/databases/$(database)/documents/Developers/$(request.auth.uid)) || 
                    exists(/databases/$(database)/documents/Admins/$(request.auth.uid)));
    }

    // Legacy nested structure (keeping for backward compatibility)
    match /facilities/{facilityId}/requests/{requestId} {
      allow read, write: if request.auth != null;
    }

    match /facilities/{facilityId}/work_orders/{workOrderId} {
      allow read, write: if request.auth != null;
    }

    match /facilities/{facilityId}/equipment/{equipmentId} {
      allow read, write: if request.auth != null;
    }

    match /facilities/{facilityId}/inventory/{inventoryId} {
      allow read, write: if request.auth != null;
    }

    match /facilities/{facilityId}/assets/{assetId} {
      allow read, write: if request.auth != null;
    }

    match /maintenance_tasks/{taskId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.resource.data.createdBy == request.auth.uid;
    }

    match /Maintenance_Tasks/{categoryId} {
      allow read, write, update, delete: if request.auth != null && 
        exists(/databases/$(database)/documents/Developers/$(request.auth.uid));
      allow read: if request.auth != null && (
        exists(/databases/$(database)/documents/Technicians/$(request.auth.uid)) ||
        exists(/databases/$(database)/documents/Admins/$(request.auth.uid))
      );
    }

    match /Notifications/{notificationId} {
      allow read, write: if request.auth != null && (
        exists(/databases/$(database)/documents/Developers/$(request.auth.uid)) ||
        exists(/databases/$(database)/documents/Admins/$(request.auth.uid))
      );
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/Technicians/$(request.auth.uid));
    }

    match /Vendors/{vendorId} {
      allow read: if request.auth != null && (
        exists(/databases/$(database)/documents/Admins/$(request.auth.uid)) ||
        exists(/databases/$(database)/documents/Developers/$(request.auth.uid)) ||
        get(/databases/$(database)/documents/Users/$(request.auth.uid)).data.facilities.hasAny([resource.data.facilityId])
      );
      allow write: if request.auth != null && (
        exists(/databases/$(database)/documents/Admins/$(request.auth.uid)) ||
        exists(/databases/$(database)/documents/Developers/$(request.auth.uid))
      ) && request.resource.data.facilityId in get(/databases/$(database)/documents/Users/$(request.auth.uid)).data.facilities;
    }

    match /TaskProgress/{taskId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        exists(/databases/$(database)/documents/Developers/$(request.auth.uid)) ||
        exists(/databases/$(database)/documents/Technicians/$(request.auth.uid)) ||
        exists(/databases/$(database)/documents/Admins/$(request.auth.uid))
      );
    }

    match /CategoryProgress/{categoryId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        exists(/databases/$(database)/documents/Developers/$(request.auth.uid)) ||
        exists(/databases/$(database)/documents/Technicians/$(request.auth.uid)) ||
        exists(/databases/$(database)/documents/Admins/$(request.auth.uid))
      );
    }

    match /EmailNotifications/{emailId} {
      allow write: if request.auth != null;
      allow read: if false;
    }

    match /{path=**} {
      allow read, write: if false;
    }
  }
}